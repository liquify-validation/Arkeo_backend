import requests
import json
from config import config
import tldextract
import socket
import ipaddress
from datetime import datetime

ServiceReverseLookup = {
    0: "unknown",
    1: "mock",
    2: "arkeo-mainnet-fullnode",
    3: "avax-mainnet-fullnode",
    4: "avax-mainnet-archivenode",
    5: "bch-mainnet-fullnode",
    6: "bch-mainnet-lightnode",
    7: "bnb-mainnet-fullnode",
    8: "bsc-mainnet-fullnode",
    9: "bsc-mainnet-archivenode",
    10: "btc-mainnet-fullnode",
    11: "btc-mainnet-lightnode",
    12: "cardano-mainnet-relaynode",
    13: "gaia-mainnet-rpc",
    14: "doge-mainnet-fullnode",
    15: "doge-mainnet-lightnode",
    16: "etc-mainnet-archivenode",
    17: "etc-mainnet-fullnode",
    18: "etc-mainnet-lightnode",
    19: "eth-mainnet-archivenode",
    20: "eth-mainnet-fullnode",
    21: "eth-mainnet-lightnode",
    22: "ltc-mainnet-fullnode",
    23: "ltc-mainnet-lightnode",
    24: "optimism-mainnet-fullnode",
    25: "osmosis-mainnet-fullnode",
    26: "polkadot-mainnet-fullnode",
    27: "polkadot-mainnet-lightnode",
    28: "polkadot-mainnet-archivenode",
    29: "polygon-mainnet-fullnode",
    30: "polygon-mainnet-archivenode",
    31: "sol-mainnet-fullnode",
    32: "thorchain-mainnet-fullnode",
    33: "bch-mainnet-unchained",
    34: "btc-mainnet-unchained",
    35: "bnb-mainnet-unchained",
    36: "bsc-mainnet-unchained",
    37: "unknown-2",
    38: "gaia-mainnet-unchained",
    39: "doge-mainnet-unchained",
    40: "eth-mainnet-unchained",
    41: "avax-mainnet-unchained",
    42: "ltc-mainnet-unchained",
    43: "osmosis-mainnet-unchained",
    44: "thorchain-mainnet-unchained",
    45: "optimism-mainnet-unchained",
    46: "gaia-mainnet-grpc",
    47: "btc-mainnet-blockbook",
    48: "ltc-mainnet-blockbook",
    49: "bch-mainnet-blockbook",
    50: "doge-mainnet-blockbook",
    51: "agoric-mainnet-archivenode",
    52: "agoric-mainnet-fullnode",
    53: "agoric-testnet-archivenode",
    54: "agoric-testnet-fullnode",
    55: "akash-mainnet-archivenode",
    56: "akash-mainnet-fullnode",
    57: "akash-testnet-archivenode",
    58: "akash-testnet-fullnode",
    59: "allora-mainnet-archivenode",
    60: "allora-mainnet-fullnode",
    61: "allora-testnet-archivenode",
    62: "allora-testnet-fullnode",
    63: "aptos-mainnet-fullnode",
    64: "aptos-testnet-fullnode",
    65: "arbitrum-mainnet-archivenode",
    66: "arbitrum-mainnet-fullnode",
    67: "arbitrum-mainnet-unchained",
    68: "arbitrum-testnet-archivenode",
    69: "arbitrum-testnet-fullnode",
    70: "arch-mainnet-archivenode",
    71: "arch-mainnet-fullnode",
    72: "arch-testnet-archivenode",
    73: "arch-testnet-fullnode",
    74: "arkeo-mainnet-archivenode",
    75: "arkeo-mainnet-unchained",
    76: "arkeo-testnet-archivenode",
    77: "arkeo-testnet-fullnode",
    78: "arkeo-testnet-unchained",
    79: "aur-mainnet-fullnode",
    80: "avax-fuji-testnet-fullnode",
    81: "avax-fuji-testnet-unchained",
    82: "azero-mainnet-archivenode",
    83: "azero-mainnet-fullnode",
    84: "azero-testnet-archivenode",
    85: "azero-testnet-fullnode",
    86: "babylon-mainnet-fullnode",
    87: "babylon-testnet-fullnode",
    88: "base-mainnet-archivenode",
    89: "base-mainnet-fullnode",
    90: "base-mainnet-unchained",
    91: "base-testnet-archivenode",
    92: "base-testnet-fullnode",
    93: "bch-testnet-blockbook",
    94: "bch-testnet-fullnode",
    95: "bch-testnet-lightnode",
    96: "bch-testnet-unchained",
    97: "bera-mainnet-archivenode",
    98: "bera-mainnet-fullnode",
    99: "bera-mainnet-unchained",
    100: "bera-testnet-archivenode",
    101: "bera-testnet-fullnode",
    102: "blast-mainnet-archivenode",
    103: "blast-mainnet-fullnode",
    104: "blast-mainnet-unchained",
    105: "blast-testnet-archivenode",
    106: "blast-testnet-fullnode",
    107: "bsc-testnet-archivenode",
    108: "bsc-testnet-fullnode",
    109: "btc-testnet-blockbook",
    110: "btc-testnet-fullnode",
    111: "btc-testnet-lightnode",
    112: "btc-testnet-unchained",
    113: "btg-mainnet-fullnode",
    114: "ccd-mainnet-fullnode",
    115: "celo-mainnet-archivenode",
    116: "celo-mainnet-fullnode",
    117: "celo-mainnet-unchained",
    118: "celo-testnet-archivenode",
    119: "celo-testnet-fullnode",
    120: "cere-mainnet-fullnode",
    121: "cfg-mainnet-archivenode",
    122: "cfg-mainnet-fullnode",
    123: "cheqd-mainnet-archivenode",
    124: "cheqd-mainnet-fullnode",
    125: "cro-mainnet-archivenode",
    126: "cro-mainnet-fullnode",
    127: "cro-testnet-archivenode",
    128: "cro-testnet-fullnode",
    129: "d-mainnet-fullnode",
    130: "dash-mainnet-blockbook",
    131: "dash-mainnet-fullnode",
    132: "dcr-mainnet-fullnode",
    133: "dfk-mainnet-archivenode",
    134: "dfk-mainnet-fullnode",
    135: "dfk-testnet-archivenode",
    136: "dfk-testnet-fullnode",
    137: "dgb-mainnet-fullnode",
    138: "dvpn-mainnet-archivenode",
    139: "dvpn-mainnet-fullnode",
    140: "dym-mainnet-archivenode",
    141: "dym-mainnet-fullnode",
    142: "dym-mainnet-unchained",
    143: "dym-testnet-archivenode",
    144: "dym-testnet-fullnode",
    145: "erowan-mainnet-archivenode",
    146: "erowan-mainnet-fullnode",
    147: "etc-mainnet-blockbook",
    148: "etc-mainnet-unchained",
    149: "eth-holesky-testnet-blockbook",
    150: "eth-holesky-testnet-fullnode",
    151: "eth-holesky-testnet-unchained",
    152: "eth-mainnet-blockbook",
    153: "eth-sepolia-testnet-blockbook",
    154: "eth-sepolia-testnet-fullnode",
    155: "eth-sepolia-testnet-unchained",
    156: "evmos-mainnet-archivenode",
    157: "evmos-mainnet-fullnode",
    158: "evmos-testnet-archivenode",
    159: "evmos-testnet-fullnode",
    160: "fil-mainnet-fullnode",
    161: "fil-mainnet-unchained",
    162: "fil-testnet-fullnode",
    163: "flare-mainnet-archivenode",
    164: "flare-mainnet-fullnode",
    165: "flare-mainnet-unchained",
    166: "flare-testnet-archivenode",
    167: "flare-testnet-fullnode",
    168: "flo-mainnet-fullnode",
    169: "flow-mainnet-fullnode",
    170: "flow-mainnet-unchained",
    171: "flow-testnet-fullnode",
    172: "frx-mainnet-archivenode",
    173: "frx-mainnet-fullnode",
    174: "frx-mainnet-unchained",
    175: "frx-testnet-archivenode",
    176: "frx-testnet-fullnode",
    177: "ftc-mainnet-fullnode",
    178: "ftm-mainnet-archivenode",
    179: "ftm-mainnet-fullnode",
    180: "ftm-mainnet-unchained",
    181: "ftm-testnet-archivenode",
    182: "ftm-testnet-fullnode",
    183: "fuse-mainnet-archivenode",
    184: "fuse-mainnet-fullnode",
    185: "fuse-testnet-archivenode",
    186: "fuse-testnet-fullnode",
    187: "gaia-mainnet-archivenode",
    188: "gaia-mainnet-fullnode",
    189: "gaia-mainnet-fullnode-grpc",
    190: "gaia-testnet-archivenode",
    191: "gaia-testnet-fullnode",
    192: "glmr-mainnet-archivenode",
    193: "glmr-mainnet-fullnode",
    194: "glmr-mainnet-unchained",
    195: "glmr-testnet-archivenode",
    196: "glmr-testnet-fullnode",
    197: "grs-mainnet-fullnode",
    198: "hbar-mainnet-fullnode",
    199: "hbar-mainnet-unchained",
    200: "hbar-testnet-fullnode",
    201: "hopr-mainnet-fullnode",
    202: "hopr-testnet-fullnode",
    203: "imx-mainnet-archivenode",
    204: "imx-mainnet-fullnode",
    205: "imx-mainnet-unchained",
    206: "imx-testnet-archivenode",
    207: "imx-testnet-fullnode",
    208: "initia-mainnet-archivenode",
    209: "initia-mainnet-fullnode",
    210: "inj-mainnet-archivenode",
    211: "inj-mainnet-fullnode",
    212: "inj-mainnet-unchained",
    213: "inj-testnet-archivenode",
    214: "inj-testnet-fullnode",
    215: "iota-mainnet-fullnode",
    216: "iotx-mainnet-fullnode",
    217: "ixo-mainnet-archivenode",
    218: "ixo-mainnet-fullnode",
    219: "jackal-mainnet-archivenode",
    220: "jackal-mainnet-fullnode",
    221: "juno-mainnet-archivenode",
    222: "juno-mainnet-fullnode",
    223: "juno-mainnet-unchained",
    224: "juno-testnet-archivenode",
    225: "juno-testnet-fullnode",
    226: "kava-mainnet-archivenode",
    227: "kava-mainnet-fullnode",
    228: "kava-testnet-archivenode",
    229: "kava-testnet-fullnode",
    230: "klay-mainnet-archivenode",
    231: "klay-mainnet-fullnode",
    232: "klay-mainnet-unchained",
    233: "klay-testnet-archivenode",
    234: "klay-testnet-fullnode",
    235: "koii-mainnet-fullnode",
    236: "lbtc-mainnet-fullnode",
    237: "linea-mainnet-archivenode",
    238: "linea-mainnet-fullnode",
    239: "linea-mainnet-unchained",
    240: "linea-testnet-archivenode",
    241: "linea-testnet-fullnode",
    242: "ln-mainnet-fullnode",
    243: "manta-mainnet-fullnode",
    244: "manta-mainnet-unchained",
    245: "mantle-mainnet-archivenode",
    246: "mantle-mainnet-fullnode",
    247: "mantle-mainnet-unchained",
    248: "mantra-mainnet-archivenode",
    249: "mantra-mainnet-fullnode",
    250: "maya-mainnet-archivenode",
    251: "maya-mainnet-fullnode",
    252: "mina-mainnet-fullnode",
    253: "mina-mainnet-unchained",
    254: "mona-mainnet-fullnode",
    255: "movr-mainnet-archivenode",
    256: "movr-mainnet-fullnode",
    257: "movr-testnet-archivenode",
    258: "movr-testnet-fullnode",
    259: "namada-mainnet-archivenode",
    260: "namada-mainnet-fullnode",
    261: "near-mainnet-fullnode",
    262: "near-mainnet-unchained",
    263: "near-testnet-fullnode",
    264: "neutron-mainnet-archivenode",
    265: "neutron-mainnet-fullnode",
    266: "neutron-mainnet-unchained",
    267: "ngm-mainnet-archivenode",
    268: "ngm-mainnet-fullnode",
    269: "ngm-testnet-archivenode",
    270: "ngm-testnet-fullnode",
    271: "nibiru-mainnet-archivenode",
    272: "nibiru-mainnet-fullnode",
    273: "nlg-mainnet-fullnode",
    274: "nmc-mainnet-fullnode",
    275: "nomic-mainnet-archivenode",
    276: "nomic-mainnet-fullnode",
    277: "one-mainnet-fullnode",
    278: "one-testnet-fullnode",
    279: "optimism-mainnet-archivenode",
    280: "osmosis-mainnet-archivenode",
    281: "paloma-mainnet-archivenode",
    282: "paloma-mainnet-fullnode",
    283: "part-mainnet-fullnode",
    284: "penumbra-mainnet-archivenode",
    285: "penumbra-mainnet-fullnode",
    286: "polkadot-testnet-archivenode",
    287: "polkadot-testnet-fullnode",
    288: "polkadot-testnet-lightnode",
    289: "polygon-Mumbai-testnet-fullnode",
    290: "polygon-Mumbai-testnet-unchained",
    291: "polygon-mainnet-unchained",
    292: "ppc-mainnet-fullnode",
    293: "pyth-mainnet-fullnode",
    294: "pyth-testnet-fullnode",
    295: "qtum-mainnet-blockbook",
    296: "qtum-mainnet-fullnode",
    297: "rdd-mainnet-fullnode",
    298: "router-mainnet-archivenode",
    299: "router-mainnet-fullnode",
    300: "rvn-mainnet-blockbook",
    301: "rvn-mainnet-fullnode",
    302: "scroll-mainnet-archivenode",
    303: "scroll-mainnet-fullnode",
    304: "scroll-mainnet-unchained",
    305: "scroll-testnet-archivenode",
    306: "scroll-testnet-fullnode",
    307: "scrt-mainnet-archivenode",
    308: "scrt-mainnet-fullnode",
    309: "seda-mainnet-fullnode",
    310: "sei-mainnet-archivenode",
    311: "sei-mainnet-fullnode",
    312: "sei-mainnet-unchained",
    313: "sei-testnet-archivenode",
    314: "sei-testnet-fullnode",
    315: "selfchain-mainnet-archivenode",
    316: "selfchain-mainnet-fullnode",
    317: "shardeum-mainnet-archivenode",
    318: "shardeum-mainnet-fullnode",
    319: "shardeum-mainnet-unchained",
    320: "shardeum-testnet-archivenode",
    321: "shardeum-testnet-fullnode",
    322: "smart-mainnet-fullnode",
    323: "sol-mainnet-unchained",
    324: "sol-testnet-fullnode",
    325: "somnia-mainnet-archivenode",
    326: "somnia-mainnet-fullnode",
    327: "starknet-mainnet-archivenode",
    328: "starknet-mainnet-fullnode",
    329: "starknet-testnet-archivenode",
    330: "starknet-testnet-fullnode",
    331: "stride-mainnet-archivenode",
    332: "stride-mainnet-fullnode",
    333: "sui-mainnet-fullnode",
    334: "sui-testnet-fullnode",
    335: "supra-mainnet-archivenode",
    336: "supra-mainnet-fullnode",
    337: "sys-mainnet-fullnode",
    338: "taiko-mainnet-archivenode",
    339: "taiko-mainnet-fullnode",
    340: "taiko-mainnet-unchained",
    341: "taiko-testnet-archivenode",
    342: "taiko-testnet-fullnode",
    343: "thorchain-mainnet-archivenode",
    344: "tia-mainnet-archivenode",
    345: "tia-mainnet-fullnode",
    346: "tia-mainnet-unchained",
    347: "tia-testnet-archivenode",
    348: "tia-testnet-fullnode",
    349: "ton-mainnet-fullnode",
    350: "ton-testnet-fullnode",
    351: "trx-mainnet-archivenode",
    352: "trx-mainnet-fullnode",
    353: "trx-mainnet-unchained",
    354: "trx-testnet-archivenode",
    355: "trx-testnet-fullnode",
    356: "union-mainnet-archivenode",
    357: "union-mainnet-fullnode",
    358: "via-mainnet-fullnode",
    359: "vtc-mainnet-fullnode",
    360: "xdai-mainnet-archivenode",
    361: "xdai-mainnet-fullnode",
    362: "xdai-mainnet-unchained",
    363: "xdai-testnet-archivenode",
    364: "xdai-testnet-fullnode",
    365: "xec-mainnet-fullnode",
    366: "xlm-mainnet-fullnode",
    367: "xlm-testnet-fullnode",
    368: "xprt-mainnet-archivenode",
    369: "xprt-mainnet-fullnode",
    370: "zec-mainnet-blockbook",
    371: "zec-mainnet-fullnode",
    372: "zircuit-mainnet-archivenode",
    373: "zircuit-mainnet-fullnode",
    374: "zircuit-mainnet-unchained",
    375: "zircuit-testnet-archivenode",
    376: "zircuit-testnet-fullnode",
    377: "zkfair-mainnet-archivenode",
    378: "zkfair-mainnet-fullnode",
    379: "zkfair-mainnet-unchained",
    380: "zkfair-testnet-archivenode",
    381: "zkfair-testnet-fullnode",
    382: "zksync-mainnet-archivenode",
    383: "zksync-mainnet-fullnode",
    384: "zksync-mainnet-unchained",
    385: "zksync-testnet-archivenode",
    386: "zksync-testnet-fullnode"
}


def convert_to_mysql_timestamp(timestamp):
    # Remove the 'Z' at the end (UTC indicator)
    timestamp = timestamp.rstrip('Z')

    # Truncate the fractional seconds to microseconds (6 digits)
    if '.' in timestamp:
        # Split the timestamp into the date-time part and the fractional part
        date_time_part, fractional_part = timestamp.split('.')

        # Truncate or pad the fractional part to exactly 6 digits
        fractional_part = (fractional_part + '000000')[:6]  # Truncate or pad to 6 digits

        # Reconstruct the timestamp with the truncated microseconds
        timestamp = f"{date_time_part}.{fractional_part}"

    # Parse the timestamp into a datetime object
    dt = datetime.strptime(timestamp, "%Y-%m-%dT%H:%M:%S.%f")

    # Return the datetime object
    return dt

def strip_port_from_url(url):
    parts = url.split(':')
    if len(parts) > 1 and parts[-1].isdigit():
        # If there are more than two parts and the last part is a number (port number)
        return ':'.join(parts[:-1])
    else:
        # Otherwise, return the original URL
        return url

def get_ip_address(address):
    address = address.split("/")[0]
    address = strip_port_from_url(address)
    try:
        # Check if the input is an IP address
        ip = ipaddress.ip_address(address)
        return str(ip)

    except ValueError:
        try:
            # Attempt DNS resolution if it's not an IP address
            ip_address = socket.gethostbyname(address)
            return ip_address
        except socket.error as e:
            print(f"Error: {e}")
            return None

def make_query(type, path):
    base_paths = {
        "api": config.Config.API,
        "rpc": config.Config.RPC
    }

    base_path = base_paths.get(type)
    if base_path is None:
        raise ValueError("Type not recognized")

    for bp in base_path:
        response_API = requests.get(bp + path)
        if response_API.status_code == 200:
            break
    else:
        raise ValueError("None of the base paths returned a successful response")

    data = json.loads(response_API.text)
    return data

def extract_main_domain(url):
    ext = tldextract.extract(url)
    return '.'.join([ext.domain])

def is_ip_address(value):
    try:
        # Try to create an IP address object
        ipaddress.ip_address(value)
        return True
    except ValueError:
        # If it raises a ValueError, it's not a valid IP address
        return False